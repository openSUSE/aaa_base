#!/bin/bash
#
#
# post.sh - to be done after extraction
#
# Copyright (c) 2012 SUSE LINUX Products GmbH, Nuernberg, Germany.
#
#
# Run this script in C-Locale, or some tools will fail.
export LC_ALL=C
test -n "$FIRST_ARG" || FIRST_ARG=$1
#
# to make sure, /var/lib/YaST/bin/bootsetup runs fine, delete
# /usr/lib/YaST/.configured2
test -e /usr/lib/YaST/.configured2 && rm -f /usr/lib/YaST/.configured2
#
# there are some installation with an etc/psdevtab, which is only readable
# for root - this slows ps for any other user. starting ps as root, creates
# it, when it doesn't exist (readable). So simply delete it.
#
test -e /etc/psdevtab && rm -f /etc/psdevtab
#
# if the old nsswitch.conf contains dns6, replace it with dns
#
test -f /etc/nsswitch.conf.rpmnew && grep dns6 /etc/nsswitch.conf >/dev/null 2>&1 && {
   sed -i -e "s|dns6|dns|g" /etc/nsswitch.conf
}

%{remove_and_set -n security CONSOLE_SHUTDOWN}
%{remove_and_set -n suseconfig CHECK_INITTAB}
%{remove_and_set -n suseconfig HALT_SOUND}

if [ "$FIRST_ARG" -gt 1 ]; then
	old_cron_vars="MAX_DAYS_IN_TMP MAX_DAYS_IN_LONG_TMP TMP_DIRS_TO_CLEAR LONG_TMP_DIRS_TO_CLEAR OWNER_TO_KEEP_IN_TMP CLEAR_TMP_DIRS_AT_BOOTUP"
	%{remove_and_set -n cron $old_cron_vars}
	if [ "$MAX_DAYS_IN_TMP" != '0' -a "$MAX_DAYS_IN_TMP" != 'no' -o \
	     "$MAX_DAYS_IN_LONG_TMP" != '0' -a "$MAX_DAYS_IN_LONG_TMP" != 'no' -o \
	     "$CLEAR_TMP_DIRS_AT_BOOTUP" != 'no' ]; then
		mkdir -p '/var/adm/update-messages'
		msgfile='/var/adm/update-messages/%name-%version-%release-tmpdirs'
		for i in $old_cron_vars; do
			eval v=\$$i
			[ -n "$v" -a "$v" != 'no' ] || continue
			if [ ! -e "$msgfile" ]; then
				cat > "$msgfile" <<-EOF
				sysconfig settings for cleaning up temporary directories are no longer
				supported. Some of the features are provided by systemd's tmpfile
				mechanism instead. Please refer to 'man tmpfiles.d' for more
				information.

				Here are the old settings for reference:

				EOF
			fi
			echo "$i=$v" >> "$msgfile"
		done
	fi
fi

if ! [ -d /etc/sysconfig ] ; then
  mkdir -p /etc/sysconfig
fi
for i in language backup \
	proxy windowmanager \
	news profile ; do
%{fillup_only -n $i}
done
if [ -e /etc/sysconfig/sysctl ]; then
	echo "merging /etc/sysconfig/sysctl into /etc/sysctl.conf ..."
	/lib/aaa_base/convert_sysctl
	mv /etc/sysconfig/sysctl /etc/sysconfig/sysctl.rpmsave
fi
test -e /etc/sysctl.conf || cat <<EOF >/etc/sysctl.conf
####
#
# /etc/sysctl.conf is meant for local sysctl settings
#
# sysctl reads settings from the following locations:
#   /boot/sysctl.conf-<kernelversion>
#   /lib/sysctl.d/*.conf
#   /usr/lib/sysctl.d/*.conf
#   /usr/local/lib/sysctl.d/*.conf
#   /etc/sysctl.d/*.conf
#   /run/sysctl.d/*.conf
#   /etc/sysctl.conf
#
# To disable or override a distribution provided file just place a
# file with the same name in /etc/sysctl.d/
#
# See sysctl.conf(5), sysctl.d(5) and sysctl(8) for more information
#
####
EOF
# fix sysconfig backup dir
if grep -q RCCONFIG_BACKUP_DIR../var/adm/backup/rpmdb /etc/sysconfig/backup; then
    sed -i -e "s|^RCCONFIG_BACKUP_DIR=.*|RCCONFIG_BACKUP_DIR=\"/var/adm/backup/sysconfig\"|" \
	/etc/sysconfig/backup
    mkdir -p /var/adm/backup/sysconfig
    mv /var/adm/backup/rpmdb/sysconfig[-_]* /var/adm/backup/sysconfig 2>/dev/null
fi

#
# Backup gshadow file and remove it (merge passwords into
# /etc/group before).
#
if [ -f /etc/gshadow -a -x /usr/sbin/grpunconv ]; then
  cp -p /etc/gshadow /etc/gshadow-`date "+%Y%m%d"`
  chmod 600 /etc/gshadow-`date "+%Y%m%d"`
  /usr/sbin/grpunconv
fi

#
# handle password files
#
for i in passwd group shadow ; do
    test -e /var/adm/fillup-templates/$i.aaa_base || continue
    echo -n "Updating etc/$i..."
  if test -f /etc/$i ; then
    cp /etc/$i /etc/$i.tmp
    rm -f /etc/$i.add
    sort -k 1,1 -t: -u /etc/$i /var/adm/fillup-templates/$i.aaa_base \
    | sort -k 1,1 -t: /etc/$i - | uniq -u > /etc/$i.add
    cat /etc/$i.add >> /etc/$i
    rm -f /etc/$i.add
    if cmp -s /etc/$i /etc/$i.tmp ; then
	echo "unchanged"
    else
	echo "modified"
    fi
    rm -f /etc/$i.tmp
    # If we have a NIS system, we have to make sure, that "^+" is at the end
    grep -v "^+" /etc/$i > /etc/$i.tmp || :
    grep "^+" /etc/$i >> /etc/$i.tmp || :
    test -s /etc/$i.tmp && cat /etc/$i.tmp > /etc/$i
    rm -f /etc/$i.tmp
  else
    cat /var/adm/fillup-templates/$i.aaa_base > /etc/$i
    echo "new"
  fi
done
# check/fix owner and permission of shadow files
for i in /etc/shadow ; do
    chmod 640 $i
    chgrp shadow $i
done
#
# Change primary group of nobody to nobody
# and change mistakenly root:users group to root:root (bnc#843230)
#
if [ -x /usr/sbin/usermod ]; then
  /usr/sbin/usermod -g nobody nobody 2> /dev/null ||:

  /usr/sbin/usermod -g root root 2> /dev/null ||:
fi

#
# create mtab if it does not exist
#
if test ! -e /etc/mtab; then
    ln -sf /proc/self/mounts /etc/mtab
fi
#
# make sure that several log files exist
#
if test ! -d /var/log ; then
    mkdir -p /var/log
fi

while read file owner mode; do
    test -h "$file" && continue
    test -e "$file" || touch "$file"
    chmod "$mode" "$file"
    chown "$owner" "$file"
done <<EOT
/root/.bash_history root:root 600
/var/log/lastlog    root:root 644
/var/log/faillog    root:root 600
/var/log/wtmp       root:utmp 664
/var/log/btmp       root:root 600
/run/utmp       root:utmp 664
EOT

if test -e /usr/sbin/usrdel.local -a ! -e /usr/sbin/userdel.local ; then
    cp /usr/sbin/usrdel.local /usr/sbin/userdel.local
fi
if test ! -e /usr/sbin/userdel.local ; then
    mkdir -p /usr/sbin
    cat << EOT > /usr/sbin/userdel.local
#!/bin/bash
#
# Here you can add your own stuff, that should be done for every user who
# will be deleted.
#
# When you delete a user with YaST, this script will be called
# with the login name as parameter.  The rest of data can be taken
# from /etc/passwd.
#
EOT
    chmod 744 /usr/sbin/userdel.local
fi

# change all /media mounts (subfs) to noauto
if test -f /etc/fstab ; then
sed  -i -e '/^[[:space:]]*#/{p;d}' -e '/[[:space:]]subfs.*noauto/{p;d}' -e '/\/media.*fs=\(cdfss\|floppyfss\)/s/\([[:space:]]subfs[[:space:]][[:space:]]*\)/\1noauto,/' /etc/fstab
fi

exit 0
